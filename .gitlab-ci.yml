.environment: &environment |
  export NINJA="ninja"
  export VIRT_PREFIX="$HOME/build/libvirt"
  export PATH="$VIRT_PREFIX/bin:$HOME/.ccache/bin:$PATH"
  export C_INCLUDE_PATH="$VIRT_PREFIX/include"
  export LD_LIBRARY_PATH="$VIRT_PREFIX/lib"
  export PKG_CONFIG_PATH="$VIRT_PREFIX/lib/pkgconfig"
  export XDG_DATA_DIRS="$VIRT_PREFIX/share:/usr/share:/usr/local/share"
  export GI_TYPELIB_PATH="$VIRT_PREFIX/lib/girepository-1.0"
  export OSINFO_SYSTEM_DIR="$VIRT_PREFIX/share/osinfo"
  export MAKEFLAGS="-j $(getconf _NPROCESSORS_ONLN)"

.osinfo-db-tools-build: &osinfo-db-tools-build |
  pushd /tmp/
  git clone https://gitlab.com/libosinfo/osinfo-db-tools.git
  cd osinfo-db-tools
  mkdir build
  cd build
  meson .. . --prefix=$VIRT_PREFIX --werror
  $NINJA install
  popd

.osinfo-db-build: &osinfo-db-build |
  pushd /tmp/
  git clone https://gitlab.com/libosinfo/osinfo-db.git
  cd osinfo-db
  mkdir build
  cd build
  make -f ../Makefile VPATH=..
  make -f ../Makefile VPATH=.. check
  make -f ../Makefile VPATH=.. install OSINFO_DB_TARGET="--system"
  popd

.libosinfo-build: &libosinfo-build |
  pushd .
  mkdir build
  cd build
  meson .. . --prefix=$VIRT_PREFIX --werror
  $NINJA
  $NINJA install
  popd

.libosinfo-check: &libosinfo-check |
  pushd .
  cd build
  $NINJA test
  popd

.libosinfo-rpm: &libosinfo-rpm |
  pushd .
  cd build
  sed -i -e 's/BuildRequires: *osinfo-db.*//' *.spec*
  $NINJA dist
  rpmbuild --clean --define "_topdir `pwd`/rpmbuild" -ta meson-dist/*.tar.xz
  popd

.libosinfo-mingw32-build: &libosinfo-mingw32-build |
  export MINGW32_VIRT_PREFIX="$VIRT_PREFIX/i686-w64-mingw32/sys-root/mingw"
  export PKG_CONFIG_PATH="$MINGW32_VIRT_PREFIX/lib/pkgconfig"
  export PKG_CONFIG_LIBDIR="/usr/i686-w64-mingw32/sys-root/mingw/lib/pkgconfig:/usr/i686-w64-mingw32/sys-root/mingw/share/pkgconfig"
  pushd .
  mkdir build_win32
  cd build_win32
  meson .. . --cross-file=/usr/share/mingw/toolchain-mingw32.meson --prefix=$MINGW32_VIRT_PREFIX -Denable-gtk-doc=false -Denable-tests=false -Denable-introspection=disabled -Denable-vala=disabled --werror
  $NINJA
  $NINJA install
  popd

.libosinfo-mingw64-build: &libosinfo-mingw64-build |
  export MINGW64_VIRT_PREFIX="$VIRT_PREFIX/x86_64-w64-mingw32/sys-root/mingw"
  export PKG_CONFIG_PATH="$MINGW64_VIRT_PREFIX/lib/pkgconfig"
  export PKG_CONFIG_LIBDIR="/usr/x86_64-w64-mingw32/sys-root/mingw/lib/pkgconfig:/usr/x86_64-w64-mingw32/sys-root/mingw/share/pkgconfig"
  pushd .
  mkdir build_win64
  cd build_win64
  meson .. . --cross-file=/usr/share/mingw/toolchain-mingw64.meson --prefix=$MINGW64_VIRT_PREFIX -Denable-gtk-doc=false -Denable-tests=false -Denable-introspection=disabled -Denable-vala=disabled --werror
  $NINJA
  $NINJA install
  popd

fedora-29:
  script:
    - *environment
    - *osinfo-db-tools-build
    - *osinfo-db-build
    - *libosinfo-build
    - *libosinfo-check
    - *libosinfo-rpm
  image: quay.io/libvirt/buildenv-libosinfo-fedora-29:latest

fedora-30:
  script:
    - *environment
    - *osinfo-db-tools-build
    - *osinfo-db-build
    - *libosinfo-build
    - *libosinfo-check
    - *libosinfo-rpm
    - *libosinfo-mingw32-build
    - *libosinfo-mingw64-build
  image: quay.io/libvirt/buildenv-libosinfo-fedora-30:latest

fedora-rawhide:
  script:
    - *environment
    - *osinfo-db-tools-build
    - *osinfo-db-build
    - *libosinfo-build
    - *libosinfo-check
    - *libosinfo-rpm
  image: quay.io/libvirt/buildenv-libosinfo-fedora-rawhide:latest

debian-10:
  script:
    - *environment
    - *osinfo-db-tools-build
    - *osinfo-db-build
    - *libosinfo-build
    - *libosinfo-check
  image: quay.io/libvirt/buildenv-libosinfo-debian-10:latest

debian-sid:
  script:
    - *environment
    - *osinfo-db-tools-build
    - *osinfo-db-build
    - *libosinfo-build
    - *libosinfo-check
  image: quay.io/libvirt/buildenv-libosinfo-debian-sid:latest
